variables:-
***********
- variables are used to store the data / values / literals.

types of variables:-
*******************
1.var :- re-intitialization is possible
        re-decalration is possible
2.let:- re-intitialization is possible
        re-decalration is not possible
3.const:-  re-intitialization is not possible
        re-decalration is not  possible

ex: - var username = "Rakesh";
    console.log(username);

    - extension of javascript file  must be ".js".

    console.log() :- it is a method to print the output in the developer console.
    document.writeln():- it is a method to print the output on the UI.

what is comment?
-comments are the ignored lined by the browser.
-to give an information to the developers.

two type of comments in js:-
****************************
html :- <!-- comment to be done -->
css :- /* ulkdsjvl */

js:- 
1.single line comment - (//)
2.multi-line comment - (/**/)


what is data types?
-datatypes used to specify what kind of data stored in the variable.

types of data types:-
*********************
1.primitive data types:-
- they are built-in
- immutable
- they can store only a single values
    -string
    -number
    -boolean
    -undefined
    -null
    -symbol
    -bigint

2.non-primtitive data types:-
- they are user defined 
- mutable
- they can store multiple values.
    -array
    -functions
    -objects
    -math , date , json

Strings:-
**********
-sequence of characters enclosed within "" , '' , ``(template literals/backtiks)

number:-  
- -2^53-1 to +2^53-1 upto this range we consider as number data type.
- beyond this range it will be bigint.

boolean :- true / false.

undefined:- variable is declared but not initialized with the value.

null:-null is empty value / absence of an object.
- return type of null is "object".

bigint:- any value exceed the range of number dattype we consider that as bigint.
- any value sufix with "n" will be bigint.

Operators:-
**************
- Operators is a special type of symbols used to perform some operations on operands.
ex - 10(operand1) +(operator) 20(operand2)

- unary
- binary
- ternary(operand1 ? operand2 : operand3)

1.arithmatic Operators
2.assignment operator
3.relational operator
4.logical operator

1.arithmatic Operators:-
- addition
- substraction
- multiplication
- division
- modulus
- expoenentail
- increment(++) :- increment will happen with one value
    - pre-increment :- increment before execution
    - post-increment :- increment after execution
- decrement(--) :- decrmenrted by 1
    - pre-decrement
    - post-decrement

concatenation :- adding two or more strings.
typecasting :- converting one datatype into another datatype.
NaN :- Not a Number :- 

2.assignment operator:-
- = , += , -= , *= ,/= , %= , **=

3.relational operator
- which are used to compare two values.
- == , === , != , !== , > , >= , < , <=
- returns always a boolean.
what is the difference between "==" and "==="?
-"==" - it will check only values not a data type.
-"===" - it will check both values and data types.
- "!=" - similar to == it will check only values not a data types
- "!==" - checks both value and data types.

4.Logical operators:-
AND(&&)- when both sides condition is true then it will return true else false.
OR(||) :- when both side is true or any one side is true it will return true else false.
NOT(!):- if true it becomes false and vice-versa. 

Decision making statments:-
****************************
-if:- it will work for true statments
- if else
- else if ladder
-switch
- ternary

prompt():- this method is used to collect the data from the users.

looping statements:-
********************
- to execute the block of codes repeatedly.
for loop :-
-will be used when the exact iteration count is known.
- minimum iteration count is "0"
synatx :-  for(initialization ; condition; updation){
            //statements
            }
while :-
- will be used when we dont know the iteration count.
- minimum iteration count is "0"
syntax :-  while(condition){
                //statements
            }
do-while:-
- will be used when we dont know the iteration count.
- minimum iteration count is "1"
syntax :-  do{
            //statements
            }while(condition)

what are entry controlled and exit controlled loops?
- entry controlled loops - for loop , while loop
- exit controlled loops - do-while loop

-what is the difference between "break" and "continue" keywords.
break - when condition satisfied it will terminate the loop
permenently

continue-when the condition satisfies it will skip that particular
condition.

functions:-
************
- A block of code used to perform a specific task
- function is a non-primitive data type
- functions can be reusable

syntax: 
function function_name(optional parameters){ // function declaration
    // statements
}

function_name(arguments) // function call

Types of functions:
- named function - func having a name and invoked with the same name.
- anonymous function - func which doesnot have a name and is not invoked with the name
- function expression - anonymous func declaration is assigned to a variable and same variable is invoked 
- immediate inovke function expression(IIFE) - once the func is created, immediately it should be invoked and it can be execute only once.
- arrow function - it is used to concise the normal function system.
    ()=>{}
    - it is similar to anonymous func.
- higher order function - 
- callback function

Note:
- current version of JS is es14
- es6 is stable version
-es ecma sript
Arrays:
- array can store multiple values within a single variable.
- collections of items/values
- array can store homogenous values and heterogenous values.
Syntax :- [] 
ex :- 
            
map and forEach diff::
map:- it is used to iterate the values of an array one by one.
- it will return new array from the original array.

forEach:- it is used to iterate the values of an array.
- if we return the value we will get "undefined"

methods in array:
push(),pop(),unshift(),shift(),reverse(),join()
concat()

what is object?
- object is an entity which is used to store the values in the form of key and value pairs.
- object is a physical entity which is having states(properties) and behaviours

syntax:- int obj=(); 
note:- object based language - 
Ex:- int obj=(
           name="ritu";
           age=20;
           );

map():- it is used to iterate values from the array.
      - if we return the value, map() method returns new copied array.

forEach():- it is used to iterate the values from the array.
orEach():- it is used to iterate the values from the array.

what is object?
- object is an entity which is having states(properties) and behaviours.
- object is used to store the data in the form of key and vallue pairs.

syntax:-  let obj - {};

note:- "this" - it is used to target current executing objects.

JSON:- Javascript object notation.
- JSON is a lightweight techinique of javascript used to transer data/information from 
  client to server and vice-versa.
- except number it will store but key 

- JSON is always in the form of "string".
methods of Json:-
1.JSON.stringify():- it is used to convert javascript object into JSON object.
2.JSON.parse() :- it is used to convert JSON object into javascript object.


Asynchronous in javascript:-
- to perform multiple task in javascript.

1.setTimeout():- it is a web api used to perform async operations at 
syntax:-  setTimeout(Callbackfn, timeout);

2.setInterval():- it is a web api used to perform async operations at 
syntax:-  setInterval(Callbackfn, timeout);

3.promise:- promise is an object which represents eventual completion or failures of an async operations.
   states of promise:-
   1.pending state
   2.fulfilled state
   3.rejected state

syntax:-  let p = new Promise((resolve,  reject)=>{});  

- the actaul way of executing the promise is instance methods,
    1.then():- 
    2.catch():- it is used to execute rejected state
    3.finallY():- once promise is settled it will print the value


4.async & await
note:- by default, javascript is synchronous(single threaded).
Asynchronous in javascript:-
- to perform multiple task in javascript.

1.setTimeout():- it is a web api used to perform async operations at 
syntax:-  setTimeout(Callbackfn, timeout);

2.setInterval():- it is a web api used to perform async operations at 
syntax:-  setInterval(Callbackfn, timeout);

3.promise:- promise is an object which represents eventual completion or failures of an async operations.
   states of promise:-
   1.pending state
   2.fulfilled state
   3.rejected state

syntax:-  let p = new Promise((resolve,  reject)=>{});  

- the actaul way of executing the promise is instance methods,
    1.then():- 
    2.catch():- it is used to execute rejected state
    3.finallY():- once promise is settled it will print the value


4.async: async keyword is a keyword is used to convert synchronous function into Asynchronous function and start to excute 
 & await: it is used to make the function to wait untill the promise complete.

note:- by default, javascript is synchronous(single threaded).

=> **DOM**:-
 dom stands for document object model.
 dom is used to add,remove,update to content in html document
 dom is used to manipulate the content in html document
 
 => Dom methods:

1. document.getElementById("):- IT is used to select the html element based on "id attribute" value.
                                id attribute should be unique/ it should be used with only one element.
2. document.getElementsByClassName(""):- IT is used to select the html element based on "class attribute" value.
                                          it is used for multiple elements with common values
3. document.getElementsByTagName(""):- it used for select html element  based on tag names.
4. document.getElementByName(""):-it is used to select based on "name attribute" value.
- these below methods select the html elements based on css selectors
5.document.querySelector(""):- it selects only one element 
6.document.ByquerySelectorAll(""):- it will selects multiple elements

innerText:it is a property used to manipulate plain text
innerHTML:- it is a proportey used to add and remove the content along with tags 
***Events in Dom:
